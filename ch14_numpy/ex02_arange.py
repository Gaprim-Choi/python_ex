# 범위를 지정해 배열을 생성

import numpy as np

print(np.arange(0,10,2)) # [0 2 4 6 8]
print(np.arange(1,10,)) # [1 2 3 4 5 6 7 8 9]

print(np.arange(5)) # [0 1 2 3 4]

b1 = np.arange(12).reshape(4,3)
print(b1)
"""
[[ 0  1  2]
 [ 3  4  5]
 [ 6  7  8]
 [ 9 10 11]]
"""

print(b1.shape) # (4, 3)

print(np.linspace(0,10,9))

print(np.linspace(1,np.pi,20))
# print(np.linspace(a,b,c)) 시작점 a, 끝점b 사이를 c만큼 균등 분배한 배열생성

"""
[1.         1.1127154  1.22543081 1.33814621 1.45086161 1.56357701
 1.67629242 1.78900782 1.90172322 2.01443863 2.12715403 2.23986943
 2.35258483 2.46530024 2.57801564 2.69073104 2.80344645 2.91616185
 3.02887725 3.14159265]
"""

print(np.zeros(10))
 # np.zwros(a) 모든 인덱스가 0인 a만큼의 배열 생성
"""[0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]"""

print(np.zeros((3,4)))
# np.zwros((a,b)) 모든 인덱스가 0인 a*b 만큼의 2차원 배열 생성
"""
[[0. 0. 0. 0.]
 [0. 0. 0. 0.]
 [0. 0. 0. 0.]]
"""

print(np.ones(5))
# np.ones(a) 모든 인덱스가 1인 a만큼의 배열 생성
"""[1. 1. 1. 1. 1.]"""
print(np.ones((3,5)))
# np.ones((a,b)) 모든 인덱스가 0인 a*b 만큼의 2차원 배열 생성
"""
[[1. 1. 1. 1. 1.]
 [1. 1. 1. 1. 1.]
 [1. 1. 1. 1. 1.]]
"""

print(np.eye(5))
#np.eye(a) a*a의 단위 행렬 생성(identofy matrix, 항등 행렬, a*1=a)
"""
[[1. 0. 0. 0. 0.]
 [0. 1. 0. 0. 0.]
 [0. 0. 1. 0. 0.]
 [0. 0. 0. 1. 0.]
 [0. 0. 0. 0. 1.]]
"""